kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pod-reader
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["pods"]
  verbs: ["get", "watch", "list"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: read-pods
subjects:
  # Uses the default service account. Consider creating a new one.
- kind: ServiceAccount
  name: default
roleRef:
  kind: Role
  name: pod-reader
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: parti
  labels:
    app: parti
spec:
  replicas: 3
  selector:
    matchLabels:
      app: parti
  template:
    metadata:
      labels:
        app: parti
    spec:
      # serviceAccountName: pod-reader
      containers:
      - name: parti
        image: "parti-example:dev"
        command: [ "./example", "k" ]
        # command: [ "./example", "server" ]
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 50001
          name: app
        - containerPort: 50101
          name: parti
        env:
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: HTTP_PORT
          value: "50001"
        - name: RAFT_PORT
          value: "50101"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "64Mi"
            cpu: "100m"
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: parti
# spec:
#   type: ClusterIP
#   selector:
#     app: parti
#   ports:
#     - port: 50001
#       targetPort: app
